version: '3'
services:
    api:
        build: .
        container_name: 'recipes-api'
        volumes:
            - .:/api
        ports:
            - 4002:4002
        env_file: # https://stackoverflow.com/questions/58047984/why-do-i-need-to-declare-env-file-explicitely-in-docker-compose-yml
            - .env
        depends_on:
            - postgres
            - redis
        networks:
            - recipies-network

    postgres:
        image: postgres:15
        container_name: 'recipes-api.postgres'
        ports:
            - 6005:5432
        env_file: # https://stackoverflow.com/questions/58047984/why-do-i-need-to-declare-env-file-explicitely-in-docker-compose-yml
            - .env
        environment:
            PGHOST: '${POSTGRES_HOST:-localhost}' # ?To understand why: https://stackoverflow.com/questions/72942519/alembic-migration-with-fastapi-docker-connection-to-port-5432-in-localhost-fa
            PGPASSWORD: '${POSTGRES_PASSWORD:-secret}'
            POSTGRES_DB: '${POSTGRES_DB}'
            POSTGRES_USER: '${POSTGRES_USER}'
            POSTGRES_PASSWORD: '${POSTGRES_PASSWORD:-secret}'
        
        restart: always
        volumes:
            - 'postgres-db:/var/lib/postgresql/data'
            - './tests/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql' # https://stackoverflow.com/questions/26598738/how-to-create-user-database-in-script-for-docker-postgres
        networks:
            - recipies-network
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
            retries: 3
            timeout: 5s
            interval: 10s

    pgadmin:
        image: dpage/pgadmin4
        container_name: 'recipes-api.pgadmin'
        restart: always
        environment: # IMPORTANT! Use <host.docker.internal> as the host name when creating the server in pgadmin
            PGADMIN_DEFAULT_EMAIL: '${PG_ADMIN_EMAIL:-admin@admin.com}'
            PGADMIN_DEFAULT_PASSWORD: '${PG_ADMIN_PASSWORD:-root}'
        ports:
            - "${PGADMIN_PORT:-5050}:80"
        depends_on:
            - postgres
        networks:
            - recipies-network
        volumes:
            -   'pg-admin:/var/lib/pgadmin'

    redis:
        image: 'redis:alpine'
        container_name: 'recipes-api.redis'
        ports:
            - '${REDIS_PORT:-6379}:6379'
        volumes:
            - 'redis-cache:/data'
        networks:
            - recipies-network
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            retries: 3
            timeout: 5s

networks: # https://www.simplilearn.com/tutorials/docker-tutorial/docker-networking#:~:text=Docker%20networking%20enables%20a%20user,to%20more%20than%20one%20network.
    recipies-network:
        driver: bridge

volumes:
    postgres-db:
        driver: local
    redis-cache:
        driver: local
    pg-admin:
        driver: local
